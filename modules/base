#!/bin/bash
#
# Copyright (C) 2017-2020 i.Dark_Templar <darktemplar@dark-templar-archives.net>
#
# This file is part of DT init scripts.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# $1 = initramfs root, $2 - parameters (optional)
common_hook_install_base() {
	local basedir=$1

	mkdir -p "${basedir}/dev"
	mkdir -p "${basedir}/bin"
	mkdir -p "${basedir}/usr/bin"
	mkdir -p "${basedir}/sbin"
	mkdir -p "${basedir}/usr/sbin"
	mkdir -p "${basedir}/root"
	mkdir -p "${basedir}/proc"
	mkdir -p "${basedir}/sys"
	mkdir -p "${basedir}/etc"
	mkdir -p "${basedir}/mnt"
	mkdir -p "${basedir}/tmp"
	mkdir -p "${basedir}/run"
	mkdir -p "${basedir}/etc/hooks"
	mkdir -p "${basedir}/etc/helpers"

	for libdir in /lib* /usr/lib* ; do
		if [[ "$libdir" != */libexec ]] ; then
			if [ -L "$libdir" ] ; then
				make_symlink "$(readlink "$libdir")" "${basedir}/${libdir}"
			else
				mkdir -p "${basedir}/${libdir}"
			fi
		fi
	done

	copy "/etc/terminfo/l/linux" "${basedir}/etc/terminfo/l/linux" "${basedir}"

	copy_executable "${sharedir}/helpers/linuxrc-config" "${basedir}/etc/helpers/linuxrc-config" "${basedir}"

	copy_executable "/bin/busybox" "${basedir}/bin/busybox" "${basedir}"
	copy_executable "${sharedir}/helpers/busybox-halt" "${basedir}/sbin/halt" "${basedir}"
	copy_executable "${sharedir}/helpers/busybox-poweroff" "${basedir}/sbin/poweroff" "${basedir}"
	copy_executable "${sharedir}/helpers/busybox-reboot" "${basedir}/sbin/reboot" "${basedir}"
	copy_executable "/sbin/badblocks" "${basedir}/sbin/badblocks" "${basedir}"
	copy_executable "/sbin/fsck.ext2" "${basedir}/sbin/fsck.ext2" "${basedir}"
	copy_executable "/sbin/fsck.ext3" "${basedir}/sbin/fsck.ext3" "${basedir}"
	copy_executable "/sbin/fsck.ext4" "${basedir}/sbin/fsck.ext4" "${basedir}"

	make_symlink "busybox" "${basedir}/bin/cat"
	make_symlink "busybox" "${basedir}/bin/chroot"
	make_symlink "busybox" "${basedir}/bin/cut"
	make_symlink "busybox" "${basedir}/bin/dd"
	make_symlink "busybox" "${basedir}/bin/echo"
	make_symlink "busybox" "${basedir}/bin/findfs"
	make_symlink "busybox" "${basedir}/bin/grep"
	make_symlink "busybox" "${basedir}/bin/ln"
	make_symlink "busybox" "${basedir}/bin/ls"
	make_symlink "busybox" "${basedir}/bin/lsmod"
	make_symlink "busybox" "${basedir}/bin/mkdir"
	make_symlink "busybox" "${basedir}/bin/modinfo"
	make_symlink "busybox" "${basedir}/bin/mount"
	make_symlink "busybox" "${basedir}/bin/mv"
	make_symlink "busybox" "${basedir}/bin/pivot_chroot"
	make_symlink "busybox" "${basedir}/bin/rm"
	make_symlink "busybox" "${basedir}/bin/rmdir"
	make_symlink "busybox" "${basedir}/bin/sed"
	make_symlink "busybox" "${basedir}/bin/sh"
	make_symlink "busybox" "${basedir}/bin/switch_root"
	make_symlink "busybox" "${basedir}/bin/umount"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/dirname"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/expr"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/find"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/readlink"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/seq"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/strings"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/wc"
	make_symlink "/bin/busybox" "${basedir}/usr/bin/["
	make_symlink "/bin/busybox" "${basedir}/sbin/insmod"
	make_symlink "/bin/busybox" "${basedir}/sbin/mdev"
	make_symlink "/bin/busybox" "${basedir}/sbin/modprobe"
	make_symlink "/bin/busybox" "${basedir}/sbin/rmmod"

	# copy mdev config and helpers
	copy "/etc/mdev.conf" "${basedir}/etc/mdev.conf" "${basedir}"

	for libdir in /lib /lib64  ; do
		if [ ! -L "$libdir" ] ; then
			if [ -d "${libdir}/mdev" ] ; then
				mkdir -p "${basedir}/${libdir}/mdev"
				for mdevexe in ${libdir}/mdev/* ; do
					if [ -e "${mdevexe}" ] ; then
						copy_executable "${mdevexe}" "${basedir}${mdevexe}" "${basedir}"
					fi
				done
			fi
		fi
	done

	copy "/etc/ld.so.conf" "${basedir}/etc/ld.so.conf" "${basedir}"
	copy "/etc/ld.so.conf.d" "${basedir}/etc/ld.so.conf.d" "${basedir}"
	copy "/etc/ld.so.cache" "${basedir}/etc/ld.so.cache" "${basedir}"

	# copy pthread dependencies
	for library in $(ldconfig -p | egrep '^\s*libgcc_s\.so\s|^\s*libgcc_s\.so\.\S*\s|^\s*libstdc\+\+\.so\s|^\s*libstdc\+\+\.so\.\S*\s|^\s*libatomic\.so\s|^\s*libatomic\.so\.\S*\s|^\s*libgomp\.so\s|^\s*libgomp\.so\.\S*\s' | rev | cut -d ' ' -f 1 | rev) ; do
		copy "$library" "${basedir}/$library" "${basedir}"
	done

	touch "${basedir}/etc/mtab"

	copy_executable "${sharedir}/hooks/base" "${basedir}/etc/hooks/base" "${basedir}"
}

# $1 = initramfs root, $2 - parameters (optional)
hook_install_base() {
	local basedir=$1
	local params=$2

	common_hook_install_base $basedir $params

	copy_executable "${sharedir}/helpers/linuxrc-init-finish" "${basedir}/sbin/linuxrc-init-finish" "${basedir}"
	copy_executable "${sharedir}/helpers/linuxrc-runhooks" "${basedir}/sbin/linuxrc-runhooks" "${basedir}"
	copy_executable "${sharedir}/helpers/linuxrc" "${basedir}/init" "${basedir}"

	return 0
}

# $1 = initramfs root, $2 - parameters (optional)
hook_shutdown_install_base() {
	local basedir=$1
	local params=$2

	common_hook_install_base $basedir $params

	mkdir -p "${basedir}/oldroot"

	copy_executable "${sharedir}/helpers/shutdown-newroot-run" "${basedir}/bin/shutdown-newroot-run" "${basedir}"

	return 0
}
